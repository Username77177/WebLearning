createdAt: "2020-01-19T06:51:14.060Z"
updatedAt: "2020-01-19T09:01:07.006Z"
type: "MARKDOWN_NOTE"
folder: "32a2e213603400f3850a"
title: "6. Основные атрибуты CSS"
tags: [
  "css"
  "html"
  "web"
]
content: '''
  # 6. Основные атрибуты CSS
  
  ## Объявление CSS отдельным файлом
  Часто, для того чтобы не перемешивать весь код в одном файле файл с форматом .css создают отдельно, а в файле .html создают ссылку на файл таблицы стилей
  
  
  ```html
  <!DOCTYPE html>
  <html lang="en">
  <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta http-equiv="X-UA-Compatible" content="ie=edge">
      <title>Атрибуты CSS</title>
      <link rel="stylesheet" href="css/css_attr.css"> <!-- Объявление файла со стилями-->
  </head>
  ```
  
  `rel` - relationship, то есть чем является этот файл для документа
   
   С помощью тега `<link>` мы можем подключать таблицы стилей **CSS**, сценарии **JS** и другое
   
   ## Основные атрибуты CSS
   
   Попробуем сделать что-то на практике. Наример, нам нужно раскрасить текст:
   
  (*HTML желательно отобразить в браузере, а не смотреть его в документе. В браузере файл CSS отделён отдельно, тут же все стили в теге `<style></style>`*)
  
  [Ссылка на файл HTML этого урока](https://github.com/Username77177/WebLearning/blob/master/htmlsource/6.CSS_attr.html)
  
  [Ссылка на файл CSS этого урока](https://github.com/Username77177/WebLearning/blob/master/htmlsource/css/css_attr.css)
   
  Далее будет приведён код только в файле с расширением .css
  
  ```css
  .senior /* Все теги с классом senior будут иметь следующие свойства */
  {
      color: goldenrod;
      font-size: larger; /* Размер текста */
      background-color: antiquewhite; /* Цвет фона */
      font-family: 'Courier New', Courier, monospace; /* Семейство шрифта (просто указывать нужный шрифт) */
      /* Первый будет использован сразу, но если он не будет найден на устройстве пользователя, то будет использован второй
      Если с ним произойдет та же ситуация, то будет использован стандартный monospace */
  }
  /* Продолжим назначать свойства другому элементу (хотя могли продолжить и на этом, просто на нём плохо видно) */
  
  p
  {
      font-family: "Fira Code", "Source Code Pro", Georgia, 'Times New Roman', Times, serif;
  }
  ```
  
  ## Google Fonts
  Зачастую обычных шрифтов не хватает, поэтому можно импортировать шрифты из **Google Fonts**. **Google Fonts** - сайт, где находятся шрифты, которые можно свободно использовать. Достаточно просто выбрать нужные шрифты, и открыть окно внизу сайта. Сайт сам предложит вам код импорта в HTML. Вам нужно только вставить код в файл HTML в секцию `<head></head>` 
  
  Пример такого кода:
  
  ```html
  <link href="https://fonts.googleapis.com/css?family=Alata&display=swap" rel="stylesheet"> 
  <!--Импортирует шрифт Alata -->
  ```
  
  Пример кода с использованием шрифтов в **CSS**:
  
  ```html
  <!--HTML-->
  <link href="https://fonts.googleapis.com/css?family=Alata|Fira+Code&display=swap" rel="stylesheet"> 
  <!-- Fira Code and Alata -->
  ```
  
  ```css
  /*CSS*/
  p {
      font-family: "Fira Code", "Source Code Pro", Georgia, Alata, 'Times New Roman', Times, serif;
      /* Шрифты */
  }
  ```
  
  ## Рамки в CSS3
  
  Давайте обведём нашу фотографию (в коде).
  
  Для этого используем свойство элемента `border`
  
  ```css
  	.thick-border-brown {
      border-width:10px;
      border-style: solid;
      border-color: brown;
    }
    /* Или одним свойством */
    .another-thick-border
    {
      border: 10px solid brown;
      border-radius: 1px;
      /* Указывает насколько скруглены углы */
    }
  ```
'''
linesHighlighted: []
isStarred: false
isTrashed: false
